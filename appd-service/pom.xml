<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~
  ~  Copyright (C) 2018 IHS Markit.
  ~  All Rights Reserved
  ~
  ~
  ~  NOTICE:  All information contained herein is, and remains
  ~  the property of IHS Markit and its suppliers,
  ~  if any.  The intellectual and technical concepts contained
  ~  herein are proprietary to IHS Markit and its suppliers
  ~  and may be covered by U.S. and Foreign Patents, patents in
  ~  process, and are protected by trade secret or copyright law.
  ~  Dissemination of this information or reproduction of this material
  ~  is strictly forbidden unless prior written permission is obtained
  ~  from IHS Markit.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>appd-poc</artifactId>
        <groupId>org.finos.fdc3.appd</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>appd-service</artifactId>
    <packaging>war</packaging>


    <properties>
        <version.minor>0.0.1</version.minor>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
        <build_version>${project.version}</build_version>
        <build_number>00001</build_number>
        <version.war.plugin>3.2.2</version.war.plugin>
        <identity.version>1.2.0</identity.version>
        <nimbus.version>6.0</nimbus.version>



    </properties>

    <dependencies>

        <dependency>
            <groupId>org.finos.fdc3.appd</groupId>
            <artifactId>appd-java-server-stubs</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.nimbusds</groupId>
            <artifactId>nimbus-jose-jwt</artifactId>
            <version>${nimbus.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty-version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty-version}</version>
        </dependency>
        <!-- To write basic websockets against -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-runner</artifactId>
            <version>${jetty-version}</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-continuation</artifactId>
            <version>${jetty-version}</version>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>${aws-sdk-version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2</artifactId>
            <version>2.0.5</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2-servlet-initializer</artifactId>
            <version>2.0.5</version>
        </dependency>

    </dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <outputDirectory>appd-service/target</outputDirectory>
                    <warName>appd-service</warName>
                    <!-- Java EE 7 doesn't require web.xml, Maven needs to catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <attachClasses>true</attachClasses>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>org.fdc3.appd.poc.AppD</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>assemble</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repositoryName>lib</repositoryName>
                    <repositoryLayout>flat</repositoryLayout>
                    <useWildcardClassPath>true</useWildcardClassPath>
                    <!-- Set the target configuration directory to be used in the bin scripts -->
                    <configurationDirectory>conf</configurationDirectory>
                    <logsDirectory>logs</logsDirectory>
                    <!-- Copy the contents from "/src/main/config" to the target
                         configuration directory in the assembled application -->
                    <copyConfigurationDirectory>true</copyConfigurationDirectory>
                    <!-- Include the target configuration directory in the beginning of
                         the classpath declaration in the bin scripts -->
                    <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
                    <!-- set alternative assemble directory -->
                    <assembleDirectory>${project.build.directory}/appd-service/appd-service-${version.minor}
                    </assembleDirectory>
                    <!-- Extra JVM arguments that will be included in the bin scripts -->
                    <extraJvmArguments>-Xms128m -Xmx256m -Dlogback.configurationFile=/opt/appd-service/conf/logback.xml
                        -Dwar.file="$BASEDIR/lib/appd-service-${version}.war"
                    </extraJvmArguments>
                    <!-- Generate bin scripts for windows and unix pr default -->
                    <platforms>
                        <platform>windows</platform>
                        <platform>unix</platform>
                    </platforms>
                    <programs>
                        <program>
                            <mainClass>org.fdc3.appd.poc.AppD</mainClass>
                            <id>AppD</id>
                            <!-- Only generate windows bat script for this application -->
                            <platforms>
                                <platform>windows</platform>
                                <platform>unix</platform>
                            </platforms>
                        </program>
                    </programs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptor>src/main/resources/assembly.xml</descriptor>
                </configuration>
            </plugin>

        </plugins>
    </build>


</project>
